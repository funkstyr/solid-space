name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
  merge_group:

env:
  REGISTRY: ghcr.io

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
# env:
#   TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
#   TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📦 Install
        run: pnpm install

      - name: 💎 Format
        run: pnpm format

      - name: 🦺 Lint
        run: pnpm lint

      # - name: 🦺 Types
      #   run: pnpm typecheck

      - name: 🏗️ Build
        run: pnpm build

      - name: 🧪 Test
        run: pnpm coverage

      # - name: Build, lint and type-check
      #   run: pnpm turbo build lint type-check
      #   env:
      #     SKIP_ENV_VALIDATION: true

  publish-docker:
    runs-on: ubuntu-latest
    needs: ["build-lint"]
    # TODO: dont have a release system, dont want to spam containers
    if: github.ref == 'refs/heads/prod'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: 🐋 Docker Build
        run: docker build . -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}

      - name: 🐋 Docker Login
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐋 Docker Push
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.sha }}
